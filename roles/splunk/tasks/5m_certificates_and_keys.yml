---
- name: Coping Certificates and Keys
  become: true
  become_user: "{{ splunk_nix_user }}"
  block:
    - name: Create Splunk/Auth/MyCerts directory
      file:
        name: "{{ splunk_home }}/etc/auth/mycerts"
        state: directory
        owner: "{{ splunk_nix_user }}"
        group: "{{ splunk_nix_group }}"
        mode: 0700

    - name: Copy instnace private key
      copy:
        backup: true
        src: "{{ inventory_hostname }}.key.pem"
        dest: "{{ splunk_home }}/etc/auth/mycerts/serverPrivate.key"
        owner: "{{ splunk_nix_user }}"
        group: "{{ splunk_nix_group }}"
        mode: 0600

    - name: Copy instnace certificate 
      copy:
        backup: true
        src: "{{ inventory_hostname }}.cert.pem"
        dest: "{{ splunk_home }}/etc/auth/mycerts/serverCertificate.pem"
        owner: "{{ splunk_nix_user }}"
        group: "{{ splunk_nix_group }}"
        mode: 0600

    - name: Copy RootCA certificate 
      copy:
        src: "ca.cert.pem"
        dest: "{{ splunk_home }}/etc/auth/mycerts/rootCA.pem"
        owner: "{{ splunk_nix_user }}"
        group: "{{ splunk_nix_group }}"
        mode: 0600

    - name: Copy IntermediateCA certificate 
      copy:
        src: "intermediate.cert.pem"
        dest: "{{ splunk_home }}/etc/auth/mycerts/intermediateCA.pem"
        owner: "{{ splunk_nix_user }}"
        group: "{{ splunk_nix_group }}"
        mode: 0600

    - name: Prepare certificates bundle
      shell:
        cmd: cat serverCertificate.pem serverPrivate.key intermediateCA.pem rootCA.pem > certsBundle.pem
        chdir: "{{ splunk_home }}/etc/auth/mycerts"

    - name: Prepare certificates chain
      shell:
        cmd: cat serverCertificate.pem intermediateCA.pem rootCA.pem > certsChain.pem
        chdir: "{{ splunk_home }}/etc/auth/mycerts"
